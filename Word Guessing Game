#include <iostream>
#include <vector>
#include <string>
#include <ctime>
#include <cstdlib>

using namespace std;

string getRandomWord() {
    string letters = "abcdefghijklmnopqrstuvwxyz";
    string word = "";
    srand(time(0));
    for (int i = 0; i < 10; i++) {
        word += letters[rand() % letters.size()];
    }
    return word;
}

void drawWord(const string& word, const vector<bool>& guessed) {
    for (size_t i = 0; i < word.length(); i++) {
        if (guessed[i]) cout << word[i] << " ";
        else cout << "_ ";
    }
    cout << endl;
}

void drawHangman(int wrongGuesses) {
    cout << "\n*** Hangman ***" << endl;
    string hangman[10] = {
        "   ***   ",
        "    |    ",
        "    O    ",
        "   /|\\  ",
        "    |    ",
        "   / \\  ",
        "         ",
        "         ",
        "         ",
        "         "
    };
    for (int i = 0; i < wrongGuesses; i++) {
        cout << hangman[i] << endl;
    }
}

int main() {
    string word = getRandomWord();
    vector<bool> guessed(word.length(), false);
    int wrongGuesses = 0;
    int maxHealth = 10;
    char guess;
    
    while (wrongGuesses < maxHealth) {
        drawWord(word, guessed);
        drawHangman(wrongGuesses);
        
        cout << "Remaining health: " << maxHealth - wrongGuesses << endl;
        cout << "Enter a letter: ";
        cin >> guess;
        
        bool found = false;
        for (size_t i = 0; i < word.length(); i++) {
            if (word[i] == guess) {
                guessed[i] = true;
                found = true;
            }
        }
        if (!found) wrongGuesses++;
        
        bool allGuessed = true;
        for (bool v : guessed) {
            if (!v) {
                allGuessed = false;
                break;
            }
        }
        if (allGuessed) {
            cout << "Congratulations! You guessed the word: " << word << endl;
            break;
        }
    }
    
    if (wrongGuesses == maxHealth) {
        cout << "Game over! The correct word was: " << word << endl;
    }
    
    return 0;
}
